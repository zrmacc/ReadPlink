// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// readbed
SEXP readbed(const char* bed, const double obs, const int snp);
RcppExport SEXP _ReadPlink_readbed(SEXP bedSEXP, SEXP obsSEXP, SEXP snpSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const char* >::type bed(bedSEXP);
    Rcpp::traits::input_parameter< const double >::type obs(obsSEXP);
    Rcpp::traits::input_parameter< const int >::type snp(snpSEXP);
    rcpp_result_gen = Rcpp::wrap(readbed(bed, obs, snp));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_ReadPlink_readbed", (DL_FUNC) &_ReadPlink_readbed, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_ReadPlink(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
